Fixed breaks caused by MSVC 2017 15.8 fixing std::aligned_storage.
---
 qtbase/mkspecs/common/msvc-version.conf | 6 ++++++
 qtbase/qmake/Makefile.win32             | 2 +-
 2 files changed, 7 insertions(+), 1 deletion(-)

diff --git a/qtbase/mkspecs/common/msvc-version.conf b/qtbase/mkspecs/common/msvc-version.conf
index 1510f53..83b5bdc 100644
--- a/qtbase/mkspecs/common/msvc-version.conf
+++ b/qtbase/mkspecs/common/msvc-version.conf
@@ -100,11 +100,22 @@ greaterThan(QMAKE_MSC_VER, 1909) {
     # API is used in direct2d, but also in multimedia, positioning and sensors.
     # We can try again with a later version of Visual Studio.
     # QMAKE_CXXFLAGS_STRICTCXX = -permissive-
+
     # MSVC partially supports the following, but '__cplusplus' definition is set
     # as for C++98 until MSVC fully conforms with C++14, see
     # https://developercommunity.visualstudio.com/content/problem/139261/msvc-incorrectly-defines-cplusplus.html
-    # QMAKE_CXXFLAGS_CXX14 = -std:c++14
-    # QMAKE_CXXFLAGS_CXX1Z = -std:c++latest
+    # Support became available in MSVC 2017 15.7:
+    greaterThan(QMAKE_MSC_VER, 1913) {
+        QMAKE_CXXFLAGS      += -Zc:__cplusplus
+        QMAKE_CXXFLAGS_CXX14 = -std:c++14
+        QMAKE_CXXFLAGS_CXX1Z = -std:c++17
+    }
+
+    # MSVC 2017 15.8+ fixed std::aligned_storage but compilation fails without
+    # this flag since the fix breaks binary compatibility.
+    greaterThan(QMAKE_MSC_VER, 1914) {
+        DEFINES += _ENABLE_EXTENDED_ALIGNED_STORAGE
+    }
 }
 
 greaterThan(QMAKE_MSC_VER, 1910) {

 
 greaterThan(QMAKE_MSC_VER, 1910) {
diff --git a/qtbase/qmake/Makefile.win32 b/qtbase/qmake/Makefile.win32
index df9d32a..b5e4ef5 100644
--- a/qtbase/qmake/Makefile.win32
+++ b/qtbase/qmake/Makefile.win32
@@ -39,7 +39,7 @@ CFLAGS_BARE = -c -Fo./ -Fdqmake.pdb \
               -D_CRT_SECURE_NO_WARNINGS -D_SCL_SECURE_NO_WARNINGS \
               -DQT_VERSION_STR=\"$(QT_VERSION)\" -DQT_VERSION_MAJOR=$(QT_MAJOR_VERSION) -DQT_VERSION_MINOR=$(QT_MINOR_VERSION) -DQT_VERSION_PATCH=$(QT_PATCH_VERSION) \
               -DQT_BUILD_QMAKE -DQT_BOOTSTRAPPED -DPROEVALUATOR_FULL \
-              -DQT_NO_FOREACH -DUNICODE
+              -DQT_NO_FOREACH -DUNICODE -D_ENABLE_EXTENDED_ALIGNED_STORAGE
 CFLAGS   = $(CFLAGS_PCH) $(CFLAGS_BARE) $(CFLAGS)
 
 CXXFLAGS_BARE = $(CFLAGS_BARE)
